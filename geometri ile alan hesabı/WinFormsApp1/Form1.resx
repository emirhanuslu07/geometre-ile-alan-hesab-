<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="radioButton4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADQAAAAxCAYAAACVtYpYAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAABSNJREFUaEPtmflLVVsUx9+fIDjlbANoOaWYFBSSKTnhhCiJQ6QJRT/0QwQNmGmI
        KZpTgoI/mIhoqTglkVaYYj+IKRL+oGlppqg4j5iux3e5z3uRvts9955r98H9gFjn7Os9n73WXufsdf6i
        /ylLS0u0uLi458cgpC8YhLRlbW1N/Es3HJjQ8PAwPX78mKKjoyk3N5fGxsbEGWXRudDk5CTl5OSQg4MD
        HTt2jNzd3enIkSN04sQJKioqoqmpKTFSGXQm9PnzZ3r06BGdOXOGLCwsKDk5mV69esWCL1++pMuXL5Ol
        pSWdPXuWsrOzaXR0VHxSOxQX+vLlC0fEw8ODDh8+TFFRUdTe3k7r6+tixC5YS83NzRQeHk729vbk5eVF
        xcXFND4+LkZohmJCiEhGRgaL2NnZUUJCAr179+63RQDnW1tbKTY2lqysrFgMEdNUTGshiDx58oRTCykU
        FxfHM7+xsSFGqMfq6irV1tbSpUuXOEW9vb2psLCQvn37Jkaoh8ZC+KL8/HxydHTk1IqIiKD379/T5uam
        GKEZ+Pzbt28pMDCQU9HFxYWePn3Ka08dZAth8aL8njt3jmfy6tWr1NLSwjOsJLiwpqYmio+P51T08fHh
        cv/161cxYn9kCQ0NDdHFixfJyMiI3NzcqLGxkba3t8VZ3bC1tUU1NTWcCcbGxhQaGkrLy8vi7F5kCX38
        +JGcnZ3J1NSU7yWITmdnp86kfvz4waX+ypUrnNZmZmbk6elJCwsLYsReZAn19fVxTt+4cYNSU1PJycmJ
        jh49yv/v6uriC1ACrKPXr1/TtWvXyNbWlk6ePEnp6elccHBjVlQIErhfABSGO3fu8DF8Mb6wp6dHdoWT
        QAn/8OEDxcTEkI2NDU/ew4cP/6l0KSkp5OrqqrxQQUGBOLJLf38/zyDSERG7fv06vXnzhnZ2dsQI1SBl
        29raKCkpiSsb1mdWVhYNDAyIEbvcu3fvYIQkUDRu377NYrgwpIyqiCEi3d3dHFkptR48eMBPG/tx4EIS
        nz59oszMTDp+/Dg/NSQmJlJHR4c4Sxw5LHaI4DzWBZ4OMCGq+GNCEqiK9+/f5ydrPGnfvHmTSzCKiJRa
        KC6Dg4PiE6r540ISuBnevXuXP4ubMX6npaXJ3hPpjZBEZWUl30tKS0vFEXnonRCe9RChhoYGcUQeeieE
        7QSE6urqxBF5GIQMQjIxCP2CQcggJBO9FULHUxO0FVJ8P9Tb28st3Vu3btH09LQ4qj7aCE1MTPBTO7Ym
        8/Pz4uheZAl9//6dH/kPHTpEfn5+3DdTNVu/oonQ3Nwc5eXl0fnz58nc3JylVO2IZQkBzE5FRQUFBATw
        Nhli5eXlajXd5Qhh211WVsa9b2z+QkJC6Pnz57+dQNlCEmglvXjxgvz9/cna2po7nbiAmZkZMWIv6ggh
        C0pKSuj06dP8d8PCwrhdpqp19TMaC0lgLVVVVVFQUBBfLDqeEJudnRUj/kWVECKMYoOIY0xkZCRVV1dz
        yslBayEJtJ7Qm/b19eUUOXXqFF/Qz6m4nxAi8uzZMx6P7TgamfX19Rq3lBUTkkDEkOvIeSxizDjaXkgZ
        NCUhhBRaWVnhxY4WLzZ9eK2C43Ij8iuKC0ngj0jFAxHDzKPco5CgXXXhwgWOSHBwMK9FXIgS6ExIAl+A
        C8bawusWExMTjpIUEaVEJHQuJIFURMTQ+UER0Ta1/osDE5LQ9duKAxfSNQYhfccgpClo0OONOd42jIyM
        iKPKs7/QIv0NVb7B+ffJsswAAAAASUVORK5CYII=
</value>
  </data>
</root>